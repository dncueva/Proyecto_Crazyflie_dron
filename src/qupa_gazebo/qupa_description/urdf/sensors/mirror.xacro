<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="$(arg tf_prefix)">
    <!-- Properties -->
    <!-- <xacro:arg name="tf_prefix" default="qupa" /> -->
    <xacro:property name="mirror_height" value="0.2" />
    <xacro:property name="camera_height" value="0.5" />
    
    <!-- Mirror Macro -->
    <xacro:macro name="mirror">    
        <link name="mirror_link">
            <inertial>
            <origin
                xyz="0 0.0072703 1.0408E-17"
                rpy="0 0 0" />
            <mass
                value="0.00099484" />
            <inertia
                ixx="5.9879E-08"
                ixy="4.6719E-24"
                ixz="2.2618E-23"
                iyy="1.0131E-07"
                iyz="-1.9251E-23"
                izz="5.9879E-08" />
            </inertial>
            <visual>
            <origin
                xyz="0 0 0"
                rpy="0 0 0" />
            <geometry>
                <mesh
                filename="package://qupa_description/meshes/mirror.stl" />
            </geometry>
            <material
                name="">
                <color
                rgba="0.74902 0.74902 0.74902 1" />
            </material>
            </visual>
        </link>
        
        <joint name="mirror_joint" type="fixed">        
            <origin xyz="0 0 ${mirror_height}" rpy="1.5708 0 0" />
            <parent link="base_link" />
            <child link="mirror_link" />
            <axis xyz="1 0 0" />
        </joint>

        <xacro:if value="${high_res}">
            <link name="camera_link"/>
            <joint name="camera_joint" type="fixed">
                <parent link="mirror_link"/>
                <child link="camera_link"/>
                <origin xyz="0.0 0.0 -0.0" rpy="0 0 -1.5708"/>
            </joint>
        </xacro:if>
    </xacro:macro>

    <!-- Logical Camera Macro -->
    <xacro:macro name="log_cam">
        <!--Logical Camera Frame-->
        <link name="logical_camera_link"/>
        <!--Logical Camera joint-->
        <joint name="logical_camera_joint" type="fixed">
            <parent link="base_link" />
            <child link="logical_camera_link" />
            <origin xyz="0 0 ${camera_height}"  rpy="0 1.5708 0" />
        </joint>

        <!--Logical Camera PLugin-->
        <gazebo reference="logical_camera_link">
            <sensor name="$(arg tf_prefix)_mirror" type="logical_camera">             
                <logical_camera>           
                    <near>0.02</near>
                    <far>5.0</far>
                    <horizontal_fov>1.5708</horizontal_fov>
                    <aspect_ratio>${240.0/240.0}</aspect_ratio>
                </logical_camera>
                <visualize>false</visualize>
                <always_on>true</always_on>
                <update_rate>20</update_rate>
            </sensor>  
        </gazebo>
    </xacro:macro>

    <xacro:macro name="real_cam">
        <gazebo reference="camera_link">
            <sensor name="$(arg tf_prefix)_camera"  type="wideanglecamera">
                <camera>
                    <horizontal_fov>6.283</horizontal_fov><!-- 6.28 for 360 -->
                    <image>
                    <width>480</width>
                    <height>480</height>
                    </image>
                    <clip>
                    <near>0.1</near>
                    <far>100</far>
                    </clip>                  
                    <lens>                          <!-- A new section named `lens`. -->
                        <type>custom</type>         <!-- type element is mandatory -->
                        <custom_function>
                            <c1>1.0</c1>            <!-- linear scaling default:1.05 -->
                            <c2>4</c2>              <!-- angle scaling  default:4 -->
                            <f>2.0</f>              <!-- one more scaling parameter default:1.0-->
                            <fun>tan</fun>          <!-- one of sin,tan,id default:tan -->
                        </custom_function>
                        <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
                        <!-- othervise it depends on lens type and custom function, if there is one -->
                        <scale_to_hfov>true</scale_to_hfov>
                        <!-- clip everything that is outside of this angle -->
                        <cutoff_angle>2.5</cutoff_angle>
                        <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
                        <env_texture_size>720</env_texture_size>
                    </lens>
                </camera>
                <always_on>1</always_on>
                <update_rate>30</update_rate>
                <plugin name="$(arg tf_prefix)_gazebo_ros_camera" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>20.0</updateRate>
                    <cameraName>mirror_camera</cameraName>
                    <imageTopicName>/$(arg tf_prefix)/camera/image_raw</imageTopicName>
                    <cameraInfoTopicName>/$(arg tf_prefix)/camera/camera_info</cameraInfoTopicName>
                    <frameName>$(arg tf_prefix)/camera_link</frameName>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

</robot>