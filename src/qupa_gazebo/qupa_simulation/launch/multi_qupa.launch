<launch>

  <!--Arguments-->

  <arg name="world" value="TAM_experiment" />           <!--Gazebo World Argument-->
  <arg name="high_res" default="false" />          <!--Spawn high res version-->
  <arg name="qupa_1" default="qp_1"/>             <!--Robots namespace for first robot-->
  <arg name="qupa_2" default="qp_2"/>             <!--Robots namespace for second robot-->
  <arg name="use_rviz" default="false"/>           <!--Visualize Rviz-->

  <!--Robots poses-->
  <arg name="first_qp_x_pos" default="-0.2"/>     <!--Gazebo World Argument-->
  <arg name="first_qp_y_pos" default="-0.2"/>
  <arg name="first_qp_z_pos" default="0.0"/>
  <arg name="first_qp_yaw" default="1.57"/>

  <arg name="second_qp_x_pos" default="0.2"/>
  <arg name="second_qp_y_pos" default="0.2"/>
  <arg name="second_qp_z_pos" default="0.0"/>
  <arg name="second_qp_yaw" default="3.1416"/>

  <!-- Configure GAZEBO_MODEL_PATH  to give access to the packages models -->
  <env name="GAZEBO_MODEL_PATH" value="$(find qupa_simulation)/models" />


  <!--Gazebo World-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find qupa_simulation)/worlds/$(arg world).world" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!--Rviz Visualization-->
  <group if="$(arg use_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find qupa_simulation)/config/multi_qupa.rviz" output="screen" />
  </group>

  <!--SPAWNING THE ROBOTS-->
  <!--First Robot -->
  <group ns="$(arg qupa_1)">    
    <!--Create URDF from Xacro files-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find qupa_description)/urdf/qupa.xacro tf_prefix:=$(arg qupa_1)  high_res:=$(arg high_res)" />
    <!--Create Robot State Publisher-->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg qupa_1)" />
    </node>
    <!-- Spawn Robot in Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg qupa_1) -x $(arg first_qp_x_pos) -y $(arg first_qp_y_pos) -z $(arg first_qp_z_pos) -Y $(arg first_qp_yaw) -param robot_description" />   
    <!--Logical Camera Bridge Gazebo-Ros-->
    <group unless="$(arg high_res)">
        <node pkg="qupa_simulation" type="logical_camera_bridge" name="logical_camera_bridge_$(arg qupa_1)">
          <param name="robot_namespace" value="$(arg qupa_1)" />
        </node>
    </group>
    <!-- Publish a world tf for each robot -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_qp_1" args="$(arg first_qp_x_pos) $(arg first_qp_y_pos) $(arg first_qp_z_pos) $(arg first_qp_yaw) 0 0 world $(arg qupa_1)/base_link" />
  </group>

  <!-- Second robot -->
  <group ns="$(arg qupa_2)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find qupa_description)/urdf/qupa.xacro tf_prefix:=$(arg qupa_2)  high_res:=$(arg high_res)" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg qupa_2)" />
    </node>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg qupa_2) -x $(arg second_qp_x_pos) -y $(arg second_qp_y_pos) -z $(arg second_qp_z_pos) -Y $(arg second_qp_yaw) -param robot_description" />
    
    <!--Logical Camera Bridge Gazebo-Ros-->
    <group unless="$(arg high_res)">
        <node pkg="qupa_simulation" type="logical_camera_bridge" name="logical_camera_bridge_$(arg qupa_2)">
          <param name="robot_namespace" value="$(arg qupa_2)" />
        </node>
    </group>
     <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_qp_2" args="$(arg second_qp_x_pos) $(arg second_qp_y_pos) $(arg second_qp_z_pos) $(arg second_qp_yaw) 0 0 world $(arg qupa_2)/base_link" />
  </group>


</launch>
